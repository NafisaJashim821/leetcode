class Solution {
private:
int l_bound(vector<int>&nums,int low,int high,int target){
    while(low<=high){
        int mid = (low + high) /2; 
        if(nums[mid]<target){
            low = mid +1;
        }
        else {
            high = mid -1;
        }
    }
    return low;
}

public:
vector<int> searchRange(vector<int>& nums, int target) {
    int low=0, high =nums.size()-1;
    int startingp= l_bound(nums,low,high,target);
   int endingp = l_bound(nums, low, high, target + 1) - 1;
    if(startingp < nums.size() && nums[startingp] == target){
            return {startingp, endingp};
        }
        return {-1,-1};
}
};